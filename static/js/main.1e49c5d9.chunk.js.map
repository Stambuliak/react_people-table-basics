{"version":3,"sources":["components/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeopleLoader/PeopleLoader.tsx","components/PeoplePage/PeoplePage.tsx","components/PageNotFound/PageNotFound.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","to","slug","classNames","sex","name","PeopleTable","people","personSlug","useParams","map","born","died","mother","motherName","father","fatherName","findParent","parentName","find","parent","PeopleLoader","useState","setPeople","isLoading","setIsLoading","error","setError","loadPeople","useCallback","PeopleFromServer","useEffect","preparedPeople","length","PeoplePage","PageNotFound","App","role","isActive","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1e49c5d9.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ninterface Props {\n  person?: Person,\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`/people/${person?.slug}`}\n    className={classNames({\n      'has-text-danger': person?.sex === 'f',\n    })}\n  >\n    {person?.name}\n  </Link>\n);\n","import { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ninterface Props {\n  people: Person[]\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { personSlug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          return (\n            <tr\n              data-cy=\"person\"\n              key={person.slug}\n              className={classNames({\n                'has-background-warning': personSlug === person.slug,\n              })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {person.mother\n                  ? <PersonLink person={person.mother} />\n                  : person.motherName || '-'}\n              </td>\n              <td>\n                {person.father\n                  ? <PersonLink person={person.father} />\n                  : person.fatherName || '-'}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useState, useCallback, useEffect } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\n\nconst findParent = (\n  people: Person[],\n  parentName: string,\n): Person | undefined => {\n  return people.find(parent => parent.name === parentName);\n};\n\nexport const PeopleLoader = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const loadPeople = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const PeopleFromServer = await getPeople();\n\n      setPeople(PeopleFromServer);\n    } catch {\n      setError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadPeople();\n  }, [loadPeople]);\n\n  const preparedPeople: Person[] = people.map(person => ({\n    ...person,\n    mother: findParent(people, person.motherName || ''),\n    father: findParent(people, person.fatherName || ''),\n  }));\n\n  if (isLoading) {\n    return (\n      <Loader />\n    );\n  }\n\n  if (error) {\n    return (\n      <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n        Something went wrong\n      </p>\n    );\n  }\n\n  if (preparedPeople.length === 0) {\n    return (\n      <p data-cy=\"noPeopleMessage\">\n        There are no people on the server\n      </p>\n    );\n  }\n\n  return (\n    <>\n      <PeopleTable people={preparedPeople} />\n    </>\n  );\n};\n","import { PeopleLoader } from '../PeopleLoader';\n\nexport const PeoplePage = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          <PeopleLoader />\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const PageNotFound = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import './App.scss';\nimport {\n  NavLink, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { PageNotFound } from './components/PageNotFound';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={\n              ({ isActive }) => classNames(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )\n            }\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={\n              ({ isActive }) => classNames(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )\n            }\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n\n          {/* <a\n            className=\"navbar-item has-background-grey-lighter\"\n            href=\"#/people\"\n          >\n            People\n          </a> */}\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"*\" element={<PageNotFound />} />\n          <Route path=\"/\" element={<HomePage />} />\n\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personSlug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route\n            path=\"/home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}